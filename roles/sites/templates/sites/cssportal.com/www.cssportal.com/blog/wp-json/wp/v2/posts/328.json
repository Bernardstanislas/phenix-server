{"id":328,"date":"2015-04-12T03:42:05","date_gmt":"2015-04-12T03:42:05","guid":{"rendered":"http:\/\/www.cssportal.com\/blog\/?p=328"},"modified":"2022-02-19T23:27:22","modified_gmt":"2022-02-19T23:27:22","slug":"create-inverted-corner-border-radius","status":"publish","type":"post","link":"https:\/\/www.cssportal.com\/blog\/create-inverted-corner-border-radius\/","title":{"rendered":"Create Inverted Corner Border Radius"},"content":{"rendered":"<style>\n.arc-bottom-l, .arc-bottom-r, .arc-top-l, .arc-top-r {\n  position:absolute;\n  background:#fff;\n  width:24px;\n  height:24px;\n  border-radius:50%;\n  border: 1px solid #ccc;\n}\n.arc-bottom-l {\n  bottom:-12px;\n  left:-12px;\n}\n.arc-bottom-r {\n  bottom:-12px;\n  right:-12px;\n}\n.arc-top-l {\n  top:-12px;\n  left:-12px;\n}\n.arc-top-r {\n  top:-12px;\n  right:-12px;\n}\n.corners {\n  background: #eee;\n  color: #333;\n  position:relative;\n  margin:20px;\n  overflow:hidden;\n}\n.text{\n  border: 1px solid #ccc;  \n  padding:8px 20px 8px;\n}<\/p>\n<p>\/*Option 1 *\/\n.arc-bottom-l, .arc-bottom-r, .arc-top-l, .arc-top-r {\n  position:absolute;\n  background:#fff;\n  width:24px;\n  height:24px;\n  border-radius:50%;\n  border: 1px solid #ccc;\n}\n.arc-bottom-l {\n  bottom:-12px;\n  left:-12px;\n}\n.arc-bottom-r {\n  bottom:-12px;\n  right:-12px;\n}\n.arc-top-l {\n  top:-12px;\n  left:-12px;\n}\n.arc-top-r {\n  top:-12px;\n  right:-12px;\n}<\/p>\n<p>\/* Option 2 *\/\n.arc-top, .arc-bottom {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;left: 0;\n}\n.arc-top:before, .arc-top:after, .arc-bottom:before, .arc-bottom:after {\n  content:'';\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-radius: 50%; \n}\n.arc-top:before {\n  top: -12px;\n  left: -12px;\n}\n.arc-top:after {\n top: -12px;\n right: -12px;\n}\n.arc-bottom:before {\n  bottom: -12px;\n  left: -12px;\n}\n.arc-bottom:after {\n bottom: -12px;\n right: -12px; \n}\n<\/style>\n<p>In this article we&#8217;ll show you how to create an inverted corner border radius. We all know how to create a standard rounded corner using the css property <span class=\"code\"><a href=\"https:\/\/www.cssportal.com\/css-properties\/border-radius.php\">border-radius<\/a><\/span>, but to create an inverted corner there are no properties that can be used, so we need to create these corners in pure css code.<!--more--><\/p>\n<p>There are two ways that you can create an inverted corner, they are:<br \/>\n1. Using four circles and using the css property <span class=\"code\"><a href=\"http:\/\/www.cssportal.com\/css-properties\/position.php\">position<\/a><\/span> to position the circles.<br \/>\n2. Using the pseudo class :before and :after and the position property.<\/p>\n<p>We will look at option one first to create our corners. You will need the following html code:<\/p>\n<pre class=\"language-html\"><code><xmp><div class=\"corners\">\r\n  <div class=\"arc-top-l\"><\/div>\r\n  <div class=\"arc-top-r\"><\/div>\r\n  <div class=\"text\">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus.<\/div>\r\n  <div class=\"arc-bottom-l\"><\/div>\r\n  <div class=\"arc-bottom-r\"><\/div>\r\n<\/div>\r\n<\/xmp><\/code><\/pre>\n<p>With the above code we have added four div&#8217;s, these will each be positioned using css into the corners of our container. Now with the css that we will need.<\/p>\n<pre class=\"language-css\"><code>.corners {\r\n  background: #eee;\r\n  color: #333;\r\n  position:relative;\r\n  overflow:hidden;\r\n}\r\n.text{\r\n  border: 1px solid #ccc;  \r\n  padding:8px 20px 8px;\r\n}\r\n.arc-bottom-l, .arc-bottom-r, .arc-top-l, .arc-top-r {\r\n  position:absolute;\r\n  background:#fff;\r\n  width:24px;\r\n  height:24px;\r\n  border-radius:50%;\r\n  border: 1px solid #ccc;\r\n}\r\n.arc-bottom-l {\r\n  bottom:-12px;\r\n  left:-12px;\r\n}\r\n.arc-bottom-r {\r\n  bottom:-12px;\r\n  right:-12px;\r\n}\r\n.arc-top-l {\r\n  top:-12px;\r\n  left:-12px;\r\n}\r\n.arc-top-r {\r\n  top:-12px;\r\n  right:-12px;\r\n}\r\n<\/code><\/pre>\n<p>So lets break this down a bit, to find out what the above classes do.<br \/>\n<span class=\"code\">.corners and .text<\/span> &#8211; Here we will create our basic container with border and background colors. If we finished here, we would only create an rectangle box. We have added padding so the text is away from our corners.<br \/>\n<span class=\"code\">.arc-bottom-l, .arc-bottom-r, .arc-top-l, .arc-top-r<\/span> &#8211; These classes will now position each circle at their respective corners, if we had not added the property overflow:hidden in .corners we would see a complete circle, but with it, we only display a quarter of the circle as 3 quarters of the circle is outside our container.<\/p>\n<p>Using the above code will display the following:<\/p>\n<div class=\"corners\">\n<div class=\"arc-top-l\"><\/div>\n<div class=\"arc-top-r\"><\/div>\n<div class=\"text\">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus.<\/div>\n<div class=\"arc-bottom-l\"><\/div>\n<div class=\"arc-bottom-r\"><\/div>\n<\/div>\n<p>OK that is one way, so what about option 2. Here we will be using the pseudo class :before and :after to create our inverted corners. The html code is similar to the above with just a few differences.<\/p>\n<pre class=\"language-html\"><code><xmp><div class=\"corners\">\r\n  <div class=\"arc-top\"><\/div>\r\n  <div class=\"text\">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus.<\/div>\r\n  <div class=\"arc-bottom\"><\/div>\r\n<\/div>\r\n<\/xmp><\/code><\/pre>\n<p>Here we just have one class for the top corners and one class for the bottom corners, Now with the css code:<\/p>\n<pre class=\"language-css\"><code>.corners {\r\n  background: #eee;\r\n  color: #333;\r\n  position:relative;\r\n  overflow:hidden;\r\n}\r\n.text{\r\n  border: 1px solid #ccc;  \r\n  padding:8px 20px 8px;\r\n}\r\n.arc-top, .arc-bottom {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0; left: 0;\r\n}\r\n.arc-top:before, .arc-top:after, .arc-bottom:before, .arc-bottom:after {\r\n  content:'';\r\n  position: absolute;\r\n  width: 24px;\r\n  height: 24px;\r\n  background-color: #fff;\r\n  border: 1px solid #ccc;\r\n  border-radius: 50%; \r\n}\r\n.arc-top:before {\r\n  top: -12px;\r\n  left: -12px;\r\n}\r\n.arc-top:after {\r\n  top: -12px;\r\n  right: -12px;\r\n}\r\n.arc-bottom:before {\r\n  bottom: -12px;\r\n  left: -12px;\r\n}\r\n.arc-bottom:after {\r\n bottom: -12px;\r\n right: -12px; \r\n}\r\n<\/code><\/pre>\n<p>An example using the above code will result in the following:<\/p>\n<div class=\"corners\">\n<div class=\"arc-top\"><\/div>\n<div class=\"text\">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus.<\/div>\n<div class=\"arc-bottom\"><\/div>\n<\/div>\n<p>So which option do I prefer? I tend to lean towards the first option without the pseudo classes, it does use less css code, but it does use more html code. Overall both options do exactly the same job, so you really can&#8217;t go wrong with either.<\/p>\n<p>I hope you enjoyed this article, if you want to experiment with the above code, just click on the button below.<\/p>\n<p><a target=\"_blank\" class=\"btn btn-primary\" href=\"https:\/\/www.cssportal.com\/tryit\/index.php?file=blog\/inverted-border\">Demo<\/a><\/p>\n","protected":false},"excerpt":{"rendered":"<p>In this article we&#8217;ll show you how to create an inverted corner border radius. We all know how to create a standard rounded corner using the css property border-radius, but to create an inverted corner there are no properties that can be used, so we need to create these corners in pure css code.<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[2],"tags":[],"_links":{"self":[{"href":"https:\/\/www.cssportal.com\/blog\/wp-json\/wp\/v2\/posts\/328"}],"collection":[{"href":"https:\/\/www.cssportal.com\/blog\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.cssportal.com\/blog\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.cssportal.com\/blog\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.cssportal.com\/blog\/wp-json\/wp\/v2\/comments?post=328"}],"version-history":[{"count":6,"href":"https:\/\/www.cssportal.com\/blog\/wp-json\/wp\/v2\/posts\/328\/revisions"}],"predecessor-version":[{"id":532,"href":"https:\/\/www.cssportal.com\/blog\/wp-json\/wp\/v2\/posts\/328\/revisions\/532"}],"wp:attachment":[{"href":"https:\/\/www.cssportal.com\/blog\/wp-json\/wp\/v2\/media?parent=328"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.cssportal.com\/blog\/wp-json\/wp\/v2\/categories?post=328"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.cssportal.com\/blog\/wp-json\/wp\/v2\/tags?post=328"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}