{"id":210,"date":"2014-04-05T06:57:33","date_gmt":"2014-04-05T06:57:33","guid":{"rendered":"http:\/\/www.cssportal.com\/blog\/?p=210"},"modified":"2022-06-19T01:39:01","modified_gmt":"2022-06-19T01:39:01","slug":"css-tips-to-improve-page-loading-times","status":"publish","type":"post","link":"https:\/\/www.cssportal.com\/blog\/css-tips-to-improve-page-loading-times\/","title":{"rendered":"CSS Tips to Improve Page Loading Times"},"content":{"rendered":"<p>Page loading times is an important factor in ranking well in a variety of search engines, plus is also extremely important for the end user of a website. These days we all want everything straight away and we do not want to wait too long for webpages to load, if sites are too slow, there is a good chance that your clients will decide to go elsewhere for the information that they are looking for.<br \/>\n<!--more--><br \/>\nAs this site is dedicated to CSS, we are going to cover a few options that you could do with your CSS files that will speed up the load times of your website. We will not be looking at other possibilities to speed up your site, such as: Using a CDN, optimizing images, HTTP caching etc.<\/p>\n<h4>Tip 1 &#8211; Convert Images to Data URI<\/h4>\n<p>One way to improve your page load times is to convert all of your small images to <a href=\"https:\/\/www.cssportal.com\/image-to-data\/\">data uri<\/a>, by doing this you&#8217;ll be loading the images when you load your CSS files thus preventing making separate requests for each image. Since your CSS file is cached by the browser, there will only be one HTTP request instead of all individual HTTP request for each image.<\/p>\n<h4>Tip 2 &#8211; Use Image Sprite Sheets<\/h4>\n<p>Another tip, again dealing with images, you can add all of your images to a single sprite sheet. Basically what we are doing is joining all images into a single file, by doing this we will only be making one HTTP request instead of the numerous requests for each image. An easy way to create the image sprite is to use a <a href=\"https:\/\/www.cssportal.com\/css-sprite-generator\/\">sprite sheet generator<\/a>, as luck would have it, we have one on this site!<\/p>\n<h4>Tip 3 &#8211; Use Shorthand Properties<\/h4>\n<p>By using shorthand properties, what we are achieving is using less properties in our CSS files. A few popular properties that you can use shorthand values are: <a href=\"https:\/\/www.cssportal.com\/css-properties\/padding.php\">padding property<\/a>, <a href=\"https:\/\/www.cssportal.com\/css-properties\/margin.php\">margin property<\/a>, <a href=\"https:\/\/www.cssportal.com\/css-properties\/font.php\">font property<\/a> and <a href=\"https:\/\/www.cssportal.com\/css-properties\/border.php\">border property<\/a>. An example of the padding shorthand property can be seen below.<\/p>\n<pre class=\"language-css\"><code>\/* Declaring individual properties *\/\r\npadding-top: 10px;\r\npadding-right: 20px;\r\npadding-bottom: 30px;\r\npadding-left: 40px;\r\n\r\n\/* Padding shorthand property *\/\r\npadding: 10px 20px 30px 40px;\r\n\r\n\/* By using the above shorthand, we reduce the code by over 50% *\/<\/code><\/pre>\n<p>You can check out an early post we wrote about <a href=\"https:\/\/www.cssportal.com\/blog\/css-shorthand-properties\">CSS shorthand properties<\/a>.<\/p>\n<h4>Tip 4 &#8211; Convert Colors to 3 Digit Hex<\/h4>\n<p>A small saving of code can be achieved by converting certain color codes to 3 digit hex code, such as #000000 (black) can be reduced to #000. I believe there are 48 different 6 digit hex codes that you can convert to 3 digit hex codes. Now obviously this is not going to make a huge difference, but every bit counts towards speeding up your site.<\/p>\n<h4>Tip 5 &#8211; Format CSS Code<\/h4>\n<p>The final way that we can speed up our site is to format your CSS code. We all code our CSS they way we like, I for one prefer to use the following approach:<\/p>\n<pre class=\"language-css\"><code>.class {\r\n   property: value;\r\n   property: value;\r\n   property: value;\r\n}<\/code><\/pre>\n<p>By coding this way, I find it clean and easy to find code if it needs to be changed. However, if we change our code to the following:<\/p>\n<pre class=\"language-css\"><code>.class {property:value;property:value;property:value;}<\/code><\/pre>\n<p>We will be able to make our CSS code more compact and therefore will be making the CSS file smaller in size. Similar to Tip 4, we don&#8217;t save a huge amount of space, but it is quite surprising how much smaller some files can be made, generally you could make the file smaller by anywhere between 10 &#8211; 30%, just by placing the properties on one line. Check out our <a href=\"https:\/\/www.cssportal.com\/css-formatter\/\">format css code<\/a> generator to help with this tip.<\/p>\n<p>Well that&#8217;s all that I can think of at the moment, but if I can think of other ways that we can increase webpage load times with CSS, I will update this blog post.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Page loading times is an important factor in ranking well in a variety of search engines, plus is also extremely important for the end user of a website. These days we all want everything straight away and we do not want to wait too long for webpages to load, if sites are too slow, there [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[2],"tags":[],"_links":{"self":[{"href":"https:\/\/www.cssportal.com\/blog\/wp-json\/wp\/v2\/posts\/210"}],"collection":[{"href":"https:\/\/www.cssportal.com\/blog\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.cssportal.com\/blog\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.cssportal.com\/blog\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.cssportal.com\/blog\/wp-json\/wp\/v2\/comments?post=210"}],"version-history":[{"count":7,"href":"https:\/\/www.cssportal.com\/blog\/wp-json\/wp\/v2\/posts\/210\/revisions"}],"predecessor-version":[{"id":572,"href":"https:\/\/www.cssportal.com\/blog\/wp-json\/wp\/v2\/posts\/210\/revisions\/572"}],"wp:attachment":[{"href":"https:\/\/www.cssportal.com\/blog\/wp-json\/wp\/v2\/media?parent=210"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.cssportal.com\/blog\/wp-json\/wp\/v2\/categories?post=210"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.cssportal.com\/blog\/wp-json\/wp\/v2\/tags?post=210"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}